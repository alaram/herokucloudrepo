{"version":3,"sources":["securityUtils/setJWTToken.js","actions/types.js","actions/securityActions.js","components/Layout/Header.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","securityUtils/SecureRoute.js","components/Layout/Landing.js","components/UserManagement/Login.js","components/UserManagement/Register.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","GET_ERRORS","logout","dispatch","localStorage","removeItem","type","payload","Header","this","props","window","location","href","headerLinks","security","validToken","user","userIsAuthenticated","className","id","to","fullname","onClick","bind","userNotAuthenticated","data-toggle","data-target","Component","connect","state","createProject","project","history","a","post","push","response","data","ProjectItem","onDeleteClick","deleteProject","projectIdentifier","projectName","description","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","get","res","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","project_task","priority","projectSequence","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","project_tasks","backlog","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","component","otherProps","render","Landing","Login","username","password","LoginRequest","login","setItem","decoded","jwt_decode","Register","confirmPassword","newUser","createNewUser","initialState","initalState","booleanActionPayload","combineReducers","action","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","jwtToken","decodedToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2307152.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","// Project related actions\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// Backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n// Security actions\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport jwt_decode from \"jwt-decode\";\n\n/**\n *\n * @param {*} newUser\n * @param {*} history\n */\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n\n    // This clean any error that get hang in the state, i.e.\n    // cleaning the payload\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n/**\n *\n * @param {*} LoginRequest\n */\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    // Extract token from res.data, i.e. destructoring\n    const { token } = res.data;\n\n    // Store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // Set the token in the Header ***\n    setJWTToken(token);\n\n    // Decode token on REACT\n    //const decoded = jwt_decode(token, { header: true });\n    const decoded = jwt_decode(token);\n\n    // Dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"./../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullname}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav m1-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n/**\n * Create a project\n *\n * @param {*} project\n * @param {*} history\n */\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\n/**\n * Retrieve all projects\n */\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\n/**\n *  Retrieve project by ID\n *\n * @param {*} id\n * @param {*} history\n */\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\n/**\n * Delete project\n *\n * @param {*} id\n * @param {*} history\n */\nexport const deleteProject = (id, history) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete all the project informaton and its related data\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    );\n}\n\nexport default CreateProjectButton;","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton></CreateProjectButton>\n              <br />\n              <hr />\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"./../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create Edit Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\n/**\n * Add project task\n *\n * @param {*} backlog_id\n * @param {*} project_task\n * @param {*} history\n */\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\n/**\n * Get Backlog\n *\n * @param {*} backlog_id\n */\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\n/**\n * Get project task\n *\n * @param {*} backlog_id\n * @param {*} pt_id\n * @param {*} history\n */\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\n/**\n *\n * @param {*} backlog_id\n * @param {*} pt_id\n * @param {*} project_task\n * @param {*} history\n */\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\n/**\n *\n * @param {*} backlog_id\n * @param {*} pt_id\n */\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone `\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n              {inProgressItems}\n            </div>\n            {\n              //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n              //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n              {doneItems}\n            </div>\n            {\n              //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n              //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No project task on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    const { id } = this.props.match.params;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life cycle hooks\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  // Life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task Id:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  /**\n   *\n   */\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   *\n   */\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  /**\n   *\n   * @param {*} nextProps\n   */\n  componentWillReceiveProps(nextProps) {\n    /**\n     * If the user has a valid token, then\n     * redirect to Dashboard\n     */\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  /**\n   *\n   * @param {*} e\n   */\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /**\n   *\n   * @param {*} e\n   */\n  onSubmit(e) {\n    e.preventDefault();\n\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nclass Register extends Component {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullname: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  /**\n   *\n   */\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  /**\n   * Life cycle hooks\n   * @param {*} nextProps\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  /**\n   *\n   * @param {*} e\n   */\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  /**\n   *\n   * @param {*} e\n   */\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      fullname: this.state.fullname,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullname,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullname\"\n                    value={this.state.fullname}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullname && (\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initalState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initalState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          (project_task) => project_task.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\n/**\n *\n */\nconst initialState = {\n  user: {},\n  validToken: false,\n};\n\n/**\n *\n * @param {*} payload\n */\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n *\n * @param {*} state\n * @param {*} action\n */\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Required imports for CSS\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// *******************************************\n// Routes concerning the application\n\n// Private routes\nimport Header from \"./components/Layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\n// Public routes\nimport Landing from \"./components/Layout/Landing\";\nimport Login from \"./components/UserManagement/Login\";\nimport Register from \"./components/UserManagement/Register\";\n\n// Imports for extra functionality, i.e. JWT token, store, etc\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\n\nimport { logout } from \"./actions/securityActions\";\n\n// *******************************************\n// This code has the following functionality\n// The \"JWT\" token is setted in the Authorization\n// header once the user login, but since all\n// components have a meeting place @ App.js then\n// get we have to set the token yet again in order\n// to interact with the components once again.\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decodedToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n// *******************************************\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            // Public routes\n          }\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {\n            // Private routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}